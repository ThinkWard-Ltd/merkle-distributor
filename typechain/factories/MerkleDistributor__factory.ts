/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MerkleDistributor,
  MerkleDistributorInterface,
} from "../MerkleDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xd997e782",
        type: "bytes32",
      },
    ],
    name: "c_0xd997e782",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001c2738038062001c278339818101604052810190620000379190620001b3565b6200006b7f2b29b2dc875fc8cd8df81556a681e9ade99068ac41ffbe7c9b59a6da37ca27c360001b6200018260201b60201c565b6200009f7f0438708b2ac7f248190be678ceaa2b31b0bb80ae325e9e3e52a5d0927269ad5660001b6200018260201b60201c565b620000d37f0553e00570b17323c723d972f3bcd44f0d3941738f55e0b13d26e7fe6438f71160001b6200018260201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250506200013e7f34e9dcb1441c06a1daa02b58789a14ed2ceaf3af3dbf94a9c0c02b05cf9338b560001b6200018260201b60201c565b620001727fa4d0d979c3822506dd5150649d0ef7c4716a70bc8bb153f066d3e0f2ae9f8f6760001b6200018260201b60201c565b8060a08181525050505062000266565b50565b600081519050620001968162000232565b92915050565b600081519050620001ad816200024c565b92915050565b60008060408385031215620001c757600080fd5b6000620001d78582860162000185565b9250506020620001ea858286016200019c565b9150509250929050565b6000620002018262000212565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200023d81620001f4565b81146200024957600080fd5b50565b620002578162000208565b81146200026357600080fd5b50565b60805160601c60a05161198a6200029d6000396000818161037701526105880152600081816104c501526107e9015261198a6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632e7ba6ef1461005c5780632eb4a7ab146100785780639e34070f14610096578063f04f3c5e146100c6578063fc0c546a146100e2575b600080fd5b61007660048036038101906100719190611170565b610100565b005b610080610586565b60405161008d9190611469565b60405180910390f35b6100b060048036038101906100ab9190611147565b6105aa565b6040516100bd919061144e565b60405180910390f35b6100e060048036038101906100db919061111e565b6107e4565b005b6100ea6107e7565b6040516100f7919061140a565b60405180910390f35b61012c7fb4c09b638862e45720d0ac6549e3b4aa3af00c0b7b8ca10e60ddf0a08ad8b2a260001b6107e4565b6101587f67c8ab86ef283ae31c7bdfef36a5e179c3f5528d9fcbb29f01ab0fd4cf7ef6d860001b6107e4565b6101847fa714471a919f6da21ff273e4fac13bd39141bdc777d80f08cc5bb075ff86e70b60001b6107e4565b6101b07faa77cf673cc41c2e5a75bf8d31764f97878fb495a52edab2a33b402ce2ed777e60001b6107e4565b6101b9856105aa565b156101f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f0906114a6565b60405180910390fd5b6102257f8c82c440a8904f63f795ac9cff31abce19f4d395ce298be426fa4c7e24e3f35560001b6107e4565b6102517f90c086f1dc46353532eeee9be8e7b99364339a6684f5eff288478d5d86180a4060001b6107e4565b61027d7f6a4c006b81b6fe88b0742675c8c2f7afa15b75f3e798a4b30bddb45a31ff243160001b6107e4565b6000858585604051602001610294939291906113cd565b6040516020818303038152906040528051906020012090506102d87f7a14bda2a710c33573bf8f65677107e41d025ea7128517765ccce650a1da231f60001b6107e4565b6103047f80d4394bc9dcfef541be2246df59239f803923a558fe1041f5dec76828de752360001b6107e4565b6103307f824048f879fc37a3f525b417e9cff28d41d77942ca76bb3fa2ba7eb07052afee60001b6107e4565b61039c838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050507f00000000000000000000000000000000000000000000000000000000000000008361080b565b6103db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d2906114e6565b60405180910390fd5b6104077f9da881c9706514961774b6073fea1788ae4b47bfca42afa5d4797fde27940d3c60001b6107e4565b6104337f4d70324e82daea56ac09fdef4e260cabf48cb4cd98e0493f8ebbc4f29843f2ad60001b6107e4565b61045f7fcb79b6284ccdee19691498f3e359dba9fc4995b021b92c05e8b97633ba77dc4860001b6107e4565b61046886610bd5565b6104947f030c0765deef1cc8c55d3ced561d795b9668022e938fa523c2d2de074909f91060001b6107e4565b6104c07fa8456484c8dee0692509994835ca34aa3549fcf5353e61c7da0b2a0e4b67da4a60001b6107e4565b6104eb7f00000000000000000000000000000000000000000000000000000000000000008686610d61565b6105177ff1f354b45d99a573ac3ba42eb820d694eadb0d467163a0a23a8fcc7186a7d5df60001b6107e4565b6105437f7cb65f135df431066f2a27d884e3eb09538c822eb463e3412f0ed708dc638df960001b6107e4565b7f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed02686868660405161057693929190611546565b60405180910390a1505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006105d87fdb960249ae6dc8663f15aa39e69203098b2b68cf08adc9a6a88350be43d21e9460001b6107e4565b6106047f4a1511dba9af86acacc9c1f618b3d16c5d1e5d4a674881d8c3a569857c6dd27660001b6107e4565b6106307ff6e3af5002c97fa9736f67f4b4ceb23fd78dac6ba0e250ec8787ac0e54a4658c60001b6107e4565b60006101008361064091906115af565b905061066e7f77334d9053eeedd0d72e3fc94ffa91afbd34cfe134d905069fc08be3fa5128fb60001b6107e4565b61069a7f810113a109a965161504ca74ec007468d26cab1f71e4fd2c363251b4df2dc33a60001b6107e4565b6000610100846106aa91906116e6565b90506106d87f60f9fb81c5f40326470a0c006b586a7b25db57db3897bec742b2a6024db8779460001b6107e4565b6107047f0f7ad30e441aa81eb90bc711f99f0fdfa4bbca78d2b99a38aade6f45db6a87cd60001b6107e4565b60008060008481526020019081526020016000205490506107477fef02f23e4c729fd1381d0c1d66938bd4f99b1a2fea84ba8747bc24385e478c2160001b6107e4565b6107737fc14697658e223c49dffcefb2d3d495f3a288dad368066fe8b4275a6c2140ba1660001b6107e4565b6000826001901b90506107a87f7e230ae77e505c8cf1b1b53e46d8e9e23911965bd60da95e027ad8dc3a08c0b660001b6107e4565b6107d47f2d6f183d3e4044bfb57064d63f80fc90614c3f000cbaff6f4fcb95eeb6ac9e9f60001b6107e4565b8081831614945050505050919050565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006108397f4fb9f2527deb3e7ad301c6e7ef7e1fe6171d8acbbd00892b1d77e587ef1014db60001b610de7565b6108657fc115774aaa9c43ac62cff6c1b587f4f7925e3ec85f830d08a94ee32832005c0460001b610de7565b6108917f34125e11ad78997df42949cbd8e79aa725e5fc695ddf04d05dc638cf3dd2f46360001b610de7565b60008290506108c27fd35751d8e6ee3defcfa03b75807feedd654919b3cdcb8a0338d2f99dbf5287ee60001b610de7565b6108ee7f0cbc18c0089c1b6993f6ea9b1599b9e6cf7400ac76a8a8ff653529103aa8c76d60001b610de7565b60005b8551811015610b6f576109267f6bcaa2ff3b070b38c0805ce792c9b66cf4d32904863556516288ea6b64cb409d60001b610de7565b6109527fe52725e1c3c884d3102a301926942054373c53ebd3b8031d4b25b34f6a2e162060001b610de7565b600086828151811061098d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506109c37fc58d6ddfedc1d2471bbf99046e3825640c6ed101aa68a37d2d9856c76dde889f60001b610de7565b6109ef7fa7d8006fb1c147ca8b8e6314df0cccc9b69eb1c6840ae8fc5cc86d052a86bd4460001b610de7565b80831015610aab57610a237fa0860c413ac94225d4c098da1ea40ce1e00c0acc943bad4e2d2cd64b46b08efe60001b610de7565b610a4f7f48804df80c0b093504b71307b74663ebe49067427fe0a01397cceb6b1c67d2eb60001b610de7565b610a7b7f08e30be8115fdbf91aa69c7359630fa78f532c86609e1c1d2bddfdee4666a6ad60001b610de7565b8281604051602001610a8e92919061138a565b604051602081830303815290604052805190602001209250610b5b565b610ad77fba4348e0f9937f5d8f9e36aa4a8d9b5b8ff98e04d06ad3c2fc207f1a46b6d47460001b610de7565b610b037ffd54c42c0259ed7a6418d7acf26cd924bd092debf74e5dbb6b781b3a060b8e5060001b610de7565b610b2f7fca9d947a9d31ab9752af4829c956f7dadeffc7e2a6d3c398fdc927717561c62860001b610de7565b8083604051602001610b4292919061138a565b6040516020818303038152906040528051906020012092505b508080610b6790611665565b9150506108f1565b50610b9c7f5ca74e7feaa50d6d2565a2348c39d33c3d0a5adb3b97eb4f47b334f28e37308060001b610de7565b610bc87ff48a8d011058b2e594148faa657f5bff9d7b49aa89449777180664c255bb904c60001b610de7565b8381149150509392505050565b610c017f21df083f61cfb31bc6a55d6d5aaea53a028c4c96feb9d4e3d26b89426f62a26460001b6107e4565b610c2d7f49a83809c9f8edc20e6f52030f23a3b21a9886542743d48a6f298c2e3f55380c60001b6107e4565b610c597f25cdeb1fabb345f24b0ec43a3379d0053fab9cd54691880d6c8b3c5f05ebbaa560001b6107e4565b600061010082610c6991906115af565b9050610c977f714a2f5bb1b36bdae2ad9bd3a4a203df72b57be29a93c4cc1826d54e53c340c860001b6107e4565b610cc37f07c8017840c32a26a0349a4452401e1ca04a7e22d2a95820db52c07791ca997a60001b6107e4565b600061010083610cd391906116e6565b9050610d017fdadd23a1f91f0ab228bd091f964a7baae7856d81c9537f189529d35d2942000660001b6107e4565b610d2d7fa9e4dd352c4ae34cd4f550ecee2ba904629416ca1494c7c42e3b1aaf7834aa2760001b6107e4565b806001901b600080848152602001908152602001600020541760008084815260200190815260200160002081905550505050565b610de28363a9059cbb60e01b8484604051602401610d80929190611425565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610dea565b505050565b50565b6000610e4c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610eb19092919063ffffffff16565b9050600081511115610eac5780806020019051810190610e6c91906110f5565b610eab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea290611526565b60405180910390fd5b5b505050565b6060610ec08484600085610ec9565b90509392505050565b606082471015610f0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f05906114c6565b60405180910390fd5b610f1785610fdd565b610f56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4d90611506565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610f7f91906113b6565b60006040518083038185875af1925050503d8060008114610fbc576040519150601f19603f3d011682016040523d82523d6000602084013e610fc1565b606091505b5091509150610fd1828286610ff0565b92505050949350505050565b600080823b905060008111915050919050565b6060831561100057829050611050565b6000835111156110135782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110479190611484565b60405180910390fd5b9392505050565b600081359050611066816118f8565b92915050565b60008083601f84011261107e57600080fd5b8235905067ffffffffffffffff81111561109757600080fd5b6020830191508360208202830111156110af57600080fd5b9250929050565b6000815190506110c58161190f565b92915050565b6000813590506110da81611926565b92915050565b6000813590506110ef8161193d565b92915050565b60006020828403121561110757600080fd5b6000611115848285016110b6565b91505092915050565b60006020828403121561113057600080fd5b600061113e848285016110cb565b91505092915050565b60006020828403121561115957600080fd5b6000611167848285016110e0565b91505092915050565b60008060008060006080868803121561118857600080fd5b6000611196888289016110e0565b95505060206111a788828901611057565b94505060406111b8888289016110e0565b935050606086013567ffffffffffffffff8111156111d557600080fd5b6111e18882890161106c565b92509250509295509295909350565b6111f9816115e0565b82525050565b61121061120b826115e0565b6116ae565b82525050565b61121f816115f2565b82525050565b61122e816115fe565b82525050565b611245611240826115fe565b6116c0565b82525050565b60006112568261157d565b6112608185611593565b9350611270818560208601611632565b80840191505092915050565b600061128782611588565b611291818561159e565b93506112a1818560208601611632565b6112aa81611775565b840191505092915050565b60006112c260288361159e565b91506112cd82611793565b604082019050919050565b60006112e560268361159e565b91506112f0826117e2565b604082019050919050565b600061130860218361159e565b915061131382611831565b604082019050919050565b600061132b601d8361159e565b915061133682611880565b602082019050919050565b600061134e602a8361159e565b9150611359826118a9565b604082019050919050565b61136d81611628565b82525050565b61138461137f82611628565b6116dc565b82525050565b60006113968285611234565b6020820191506113a68284611234565b6020820191508190509392505050565b60006113c2828461124b565b915081905092915050565b60006113d98286611373565b6020820191506113e982856111ff565b6014820191506113f98284611373565b602082019150819050949350505050565b600060208201905061141f60008301846111f0565b92915050565b600060408201905061143a60008301856111f0565b6114476020830184611364565b9392505050565b60006020820190506114636000830184611216565b92915050565b600060208201905061147e6000830184611225565b92915050565b6000602082019050818103600083015261149e818461127c565b905092915050565b600060208201905081810360008301526114bf816112b5565b9050919050565b600060208201905081810360008301526114df816112d8565b9050919050565b600060208201905081810360008301526114ff816112fb565b9050919050565b6000602082019050818103600083015261151f8161131e565b9050919050565b6000602082019050818103600083015261153f81611341565b9050919050565b600060608201905061155b6000830186611364565b61156860208301856111f0565b6115756040830184611364565b949350505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006115ba82611628565b91506115c583611628565b9250826115d5576115d4611746565b5b828204905092915050565b60006115eb82611608565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015611650578082015181840152602081019050611635565b8381111561165f576000848401525b50505050565b600061167082611628565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116a3576116a2611717565b5b600182019050919050565b60006116b9826116ca565b9050919050565b6000819050919050565b60006116d582611786565b9050919050565b6000819050919050565b60006116f182611628565b91506116fc83611628565b92508261170c5761170b611746565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f4d65726b6c654469737472696275746f723a2044726f7020616c72656164792060008201527f636c61696d65642e000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f6660008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b611901816115e0565b811461190c57600080fd5b50565b611918816115f2565b811461192357600080fd5b50565b61192f816115fe565b811461193a57600080fd5b50565b61194681611628565b811461195157600080fd5b5056fea2646970667358221220eeac6a5c84d87e972b6deaf88dacf4444ffa1e2869caa879c0fd363cb19ce00064736f6c63430008040033";

export class MerkleDistributor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    token_: string,
    merkleRoot_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MerkleDistributor> {
    return super.deploy(
      token_,
      merkleRoot_,
      overrides || {}
    ) as Promise<MerkleDistributor>;
  }
  getDeployTransaction(
    token_: string,
    merkleRoot_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token_, merkleRoot_, overrides || {});
  }
  attach(address: string): MerkleDistributor {
    return super.attach(address) as MerkleDistributor;
  }
  connect(signer: Signer): MerkleDistributor__factory {
    return super.connect(signer) as MerkleDistributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleDistributorInterface {
    return new utils.Interface(_abi) as MerkleDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleDistributor {
    return new Contract(address, _abi, signerOrProvider) as MerkleDistributor;
  }
}
