/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestERC20, TestERC20Interface } from "../TestERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amountToMint",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x893e6624",
        type: "bytes32",
      },
    ],
    name: "c_0x893e6624",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002a2a38038062002a2a83398181016040528101906200003791906200094a565b828281600390805190602001906200005192919062000811565b5080600490805190602001906200006a92919062000811565b505050620000a17f46faf31ebec30d10c795c64f713d0dfe704ca9ebe270c29a678727f7b4db6db560001b6200012460201b60201c565b620000d57f5fea2fdba16efdb5652d5b2d5a8967c4069f824b0fc7c6a8bfd258bf18190a7060001b6200012460201b60201c565b620001097fcfc35693d6b2cc662a499c2ab89f5f78eccdc1e99f124d231488dca20139af3e60001b6200012460201b60201c565b6200011b33826200012760201b60201c565b50505062000e0e565b50565b6200015b7f9695d9d4204d96dbdc2f7f2cbc07ff48152a223845c54cf4670cf9c8cb9d46f860001b6200012460201b60201c565b6200018f7feb16eed56744685cf40dd82b0a311aad8970c5bffb3f565fec53a5edc7b29f4b60001b6200012460201b60201c565b620001c37fd7ce7f332872be352e20769afde9e4044e4c54f1690af5ab9b3ffca5c7a11c2660001b6200012460201b60201c565b6000620001d6836200047760201b60201c565b90506200020c7f0b727316058993af4cd9b6ee5e0a6a8be44c660e4823c36c0419394ad36d0c4260001b6200012460201b60201c565b620002407f5b56e184d88a8b2ea95ed4eb276674c3c967a414e49abe87da829c00016fe01660001b6200012460201b60201c565b818110156200030a576200027d7f4743758ee794bc4276984b29b96adaf1ab758cfd3d0dc29da9b676577c237c9160001b6200012460201b60201c565b620002b17f482547dea8e342bea9c2625e4c5fa010bdbb7621c82b5d0a143ef3e48dd5ac5860001b6200012460201b60201c565b620002e57fbf7c0110b432ac1e0b298beb4031f20951cd4522323c9b32a039b6fcc70a589660001b6200012460201b60201c565b62000304838284620002f8919062000ba8565b620004bf60201b60201c565b62000472565b6200033e7f55be55ebd149e0a5ad44b7015335e88da0322f37016e7c413c46c5bbf149c81960001b6200012460201b60201c565b620003727f30dd2a566418d04941940f6028affd89cc15d741b00502c43deba77d7dc24e6d60001b6200012460201b60201c565b818111156200043c57620003af7fa7a8bd195b19e8f579fdf53f9ffeec879ce3fcffebc2e2c48be7423e69641cfa60001b6200012460201b60201c565b620003e37f4ccd88507d4d841dc16c1420707377ed8a40495c7b61364eaf29e464f2cb289f60001b6200012460201b60201c565b620004177fad56f00c91037b022c4450fae630a01dede9ff6a65d6544b47973d1f2a3ce07060001b6200012460201b60201c565b620004368383836200042a919062000ba8565b6200062460201b60201c565b62000471565b620004707f5b31ee21fe59b82c0d3a02df482cca30e88243a2278d893f6064443740a53b5b60001b6200012460201b60201c565b5b5b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000532576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005299062000a9c565b60405180910390fd5b62000546600083836200080c60201b60201c565b80600260008282546200055a919062000b4b565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620005b1919062000b4b565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000618919062000abe565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000697576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200068e9062000a7a565b60405180910390fd5b620006ab826000836200080c60201b60201c565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000734576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200072b9062000a58565b60405180910390fd5b818162000742919062000ba8565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825462000798919062000ba8565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051620007ff919062000abe565b60405180910390a3505050565b505050565b8280546200081f9062000c23565b90600052602060002090601f0160209004810192826200084357600085556200088f565b82601f106200085e57805160ff19168380011785556200088f565b828001600101855582156200088f579182015b828111156200088e57825182559160200191906001019062000871565b5b5090506200089e9190620008a2565b5090565b5b80821115620008bd576000816000905550600101620008a3565b5090565b6000620008d8620008d28462000b04565b62000adb565b905082815260208101848484011115620008f157600080fd5b620008fe84828562000bed565b509392505050565b600082601f8301126200091857600080fd5b81516200092a848260208601620008c1565b91505092915050565b600081519050620009448162000df4565b92915050565b6000806000606084860312156200096057600080fd5b600084015167ffffffffffffffff8111156200097b57600080fd5b620009898682870162000906565b935050602084015167ffffffffffffffff811115620009a757600080fd5b620009b58682870162000906565b9250506040620009c88682870162000933565b9150509250925092565b6000620009e160228362000b3a565b9150620009ee8262000d2d565b604082019050919050565b600062000a0860218362000b3a565b915062000a158262000d7c565b604082019050919050565b600062000a2f601f8362000b3a565b915062000a3c8262000dcb565b602082019050919050565b62000a528162000be3565b82525050565b6000602082019050818103600083015262000a7381620009d2565b9050919050565b6000602082019050818103600083015262000a9581620009f9565b9050919050565b6000602082019050818103600083015262000ab78162000a20565b9050919050565b600060208201905062000ad5600083018462000a47565b92915050565b600062000ae762000afa565b905062000af5828262000c59565b919050565b6000604051905090565b600067ffffffffffffffff82111562000b225762000b2162000ced565b5b62000b2d8262000d1c565b9050602081019050919050565b600082825260208201905092915050565b600062000b588262000be3565b915062000b658362000be3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000b9d5762000b9c62000c8f565b5b828201905092915050565b600062000bb58262000be3565b915062000bc28362000be3565b92508282101562000bd85762000bd762000c8f565b5b828203905092915050565b6000819050919050565b60005b8381101562000c0d57808201518184015260208101905062000bf0565b8381111562000c1d576000848401525b50505050565b6000600282049050600182168062000c3c57607f821691505b6020821081141562000c535762000c5262000cbe565b5b50919050565b62000c648262000d1c565b810181811067ffffffffffffffff8211171562000c865762000c8562000ced565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b62000dff8162000be3565b811462000e0b57600080fd5b50565b611c0c8062000e1e6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d714610228578063a9059cbb14610258578063dd62ed3e14610288578063e30443bc146102b8576100cf565b806339509351146101aa57806370a08231146101da57806395d89b411461020a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806338e728db1461018e575b600080fd5b6100dc6102d4565b6040516100e99190611530565b60405180910390f35b61010c600480360381019061010791906112ec565b610366565b6040516101199190611515565b60405180910390f35b61012a610384565b6040516101379190611692565b60405180910390f35b61015a6004803603810190610155919061129d565b61038e565b6040516101679190611515565b60405180910390f35b61017861048f565b60405161018591906116ad565b60405180910390f35b6101a860048036038101906101a39190611328565b610498565b005b6101c460048036038101906101bf91906112ec565b61049b565b6040516101d19190611515565b60405180910390f35b6101f460048036038101906101ef9190611238565b610547565b6040516102019190611692565b60405180910390f35b61021261058f565b60405161021f9190611530565b60405180910390f35b610242600480360381019061023d91906112ec565b610621565b60405161024f9190611515565b60405180910390f35b610272600480360381019061026d91906112ec565b610715565b60405161027f9190611515565b60405180910390f35b6102a2600480360381019061029d9190611261565b610733565b6040516102af9190611692565b60405180910390f35b6102d260048036038101906102cd91906112ec565b6107ba565b005b6060600380546102e390611800565b80601f016020809104026020016040519081016040528092919081815260200182805461030f90611800565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b5050505050905090565b600061037a610373610a7a565b8484610a82565b6001905092915050565b6000600254905090565b600061039b848484610c4d565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103e6610a7a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045d906115d2565b60405180910390fd5b61048385610472610a7a565b858461047e919061173a565b610a82565b60019150509392505050565b60006012905090565b50565b600061053d6104a8610a7a565b8484600160006104b6610a7a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461053891906116e4565b610a82565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461059e90611800565b80601f01602080910402602001604051908101604052809291908181526020018280546105ca90611800565b80156106175780601f106105ec57610100808354040283529160200191610617565b820191906000526020600020905b8154815290600101906020018083116105fa57829003601f168201915b5050505050905090565b60008060016000610630610a7a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e490611652565b60405180910390fd5b61070a6106f8610a7a565b858584610705919061173a565b610a82565b600191505092915050565b6000610729610722610a7a565b8484610c4d565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6107e67f9695d9d4204d96dbdc2f7f2cbc07ff48152a223845c54cf4670cf9c8cb9d46f860001b610498565b6108127feb16eed56744685cf40dd82b0a311aad8970c5bffb3f565fec53a5edc7b29f4b60001b610498565b61083e7fd7ce7f332872be352e20769afde9e4044e4c54f1690af5ab9b3ffca5c7a11c2660001b610498565b600061084983610547565b90506108777f0b727316058993af4cd9b6ee5e0a6a8be44c660e4823c36c0419394ad36d0c4260001b610498565b6108a37f5b56e184d88a8b2ea95ed4eb276674c3c967a414e49abe87da829c00016fe01660001b610498565b81811015610949576108d77f4743758ee794bc4276984b29b96adaf1ab758cfd3d0dc29da9b676577c237c9160001b610498565b6109037f482547dea8e342bea9c2625e4c5fa010bdbb7621c82b5d0a143ef3e48dd5ac5860001b610498565b61092f7fbf7c0110b432ac1e0b298beb4031f20951cd4522323c9b32a039b6fcc70a589660001b610498565b61094483828461093f919061173a565b610ecc565b610a75565b6109757f55be55ebd149e0a5ad44b7015335e88da0322f37016e7c413c46c5bbf149c81960001b610498565b6109a17f30dd2a566418d04941940f6028affd89cc15d741b00502c43deba77d7dc24e6d60001b610498565b81811115610a47576109d57fa7a8bd195b19e8f579fdf53f9ffeec879ce3fcffebc2e2c48be7423e69641cfa60001b610498565b610a017f4ccd88507d4d841dc16c1420707377ed8a40495c7b61364eaf29e464f2cb289f60001b610498565b610a2d7fad56f00c91037b022c4450fae630a01dede9ff6a65d6544b47973d1f2a3ce07060001b610498565b610a42838383610a3d919061173a565b611020565b610a74565b610a737f5b31ee21fe59b82c0d3a02df482cca30e88243a2278d893f6064443740a53b5b60001b610498565b5b5b505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae990611632565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5990611592565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610c409190611692565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610cbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb490611612565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2490611552565b60405180910390fd5b610d388383836111f4565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610dbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db5906115b2565b60405180910390fd5b8181610dca919061173a565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e5a91906116e4565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ebe9190611692565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3390611672565b60405180910390fd5b610f48600083836111f4565b8060026000828254610f5a91906116e4565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610faf91906116e4565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110149190611692565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611090576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611087906115f2565b60405180910390fd5b61109c826000836111f4565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611122576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111990611572565b60405180910390fd5b818161112e919061173a565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254611182919061173a565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111e79190611692565b60405180910390a3505050565b505050565b60008135905061120881611b91565b92915050565b60008135905061121d81611ba8565b92915050565b60008135905061123281611bbf565b92915050565b60006020828403121561124a57600080fd5b6000611258848285016111f9565b91505092915050565b6000806040838503121561127457600080fd5b6000611282858286016111f9565b9250506020611293858286016111f9565b9150509250929050565b6000806000606084860312156112b257600080fd5b60006112c0868287016111f9565b93505060206112d1868287016111f9565b92505060406112e286828701611223565b9150509250925092565b600080604083850312156112ff57600080fd5b600061130d858286016111f9565b925050602061131e85828601611223565b9150509250929050565b60006020828403121561133a57600080fd5b60006113488482850161120e565b91505092915050565b61135a81611780565b82525050565b600061136b826116c8565b61137581856116d3565b93506113858185602086016117cd565b61138e81611890565b840191505092915050565b60006113a66023836116d3565b91506113b1826118a1565b604082019050919050565b60006113c96022836116d3565b91506113d4826118f0565b604082019050919050565b60006113ec6022836116d3565b91506113f78261193f565b604082019050919050565b600061140f6026836116d3565b915061141a8261198e565b604082019050919050565b60006114326028836116d3565b915061143d826119dd565b604082019050919050565b60006114556021836116d3565b915061146082611a2c565b604082019050919050565b60006114786025836116d3565b915061148382611a7b565b604082019050919050565b600061149b6024836116d3565b91506114a682611aca565b604082019050919050565b60006114be6025836116d3565b91506114c982611b19565b604082019050919050565b60006114e1601f836116d3565b91506114ec82611b68565b602082019050919050565b611500816117b6565b82525050565b61150f816117c0565b82525050565b600060208201905061152a6000830184611351565b92915050565b6000602082019050818103600083015261154a8184611360565b905092915050565b6000602082019050818103600083015261156b81611399565b9050919050565b6000602082019050818103600083015261158b816113bc565b9050919050565b600060208201905081810360008301526115ab816113df565b9050919050565b600060208201905081810360008301526115cb81611402565b9050919050565b600060208201905081810360008301526115eb81611425565b9050919050565b6000602082019050818103600083015261160b81611448565b9050919050565b6000602082019050818103600083015261162b8161146b565b9050919050565b6000602082019050818103600083015261164b8161148e565b9050919050565b6000602082019050818103600083015261166b816114b1565b9050919050565b6000602082019050818103600083015261168b816114d4565b9050919050565b60006020820190506116a760008301846114f7565b92915050565b60006020820190506116c26000830184611506565b92915050565b600081519050919050565b600082825260208201905092915050565b60006116ef826117b6565b91506116fa836117b6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561172f5761172e611832565b5b828201905092915050565b6000611745826117b6565b9150611750836117b6565b92508282101561176357611762611832565b5b828203905092915050565b600061177982611796565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156117eb5780820151818401526020810190506117d0565b838111156117fa576000848401525b50505050565b6000600282049050600182168061181857607f821691505b6020821081141561182c5761182b611861565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611b9a8161176e565b8114611ba557600080fd5b50565b611bb18161178c565b8114611bbc57600080fd5b50565b611bc8816117b6565b8114611bd357600080fd5b5056fea2646970667358221220219207069c426fe371ebf3e6f9f49bd41a3805cdf4cbee11fe30395061801b0864736f6c63430008040033";

export class TestERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    amountToMint: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC20> {
    return super.deploy(
      name_,
      symbol_,
      amountToMint,
      overrides || {}
    ) as Promise<TestERC20>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    amountToMint: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      amountToMint,
      overrides || {}
    );
  }
  attach(address: string): TestERC20 {
    return super.attach(address) as TestERC20;
  }
  connect(signer: Signer): TestERC20__factory {
    return super.connect(signer) as TestERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20Interface {
    return new utils.Interface(_abi) as TestERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC20 {
    return new Contract(address, _abi, signerOrProvider) as TestERC20;
  }
}
